{"ast":null,"code":"var _jsxFileName = \"C:\\\\TesCode\\\\aichat\\\\frontend\\\\src\\\\context\\\\ThemeContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { ThemeProvider as MUIThemeProvider, createTheme, CssBaseline } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext({\n  mode: 'light',\n  toggleTheme: () => {}\n});\nexport const useTheme = () => {\n  _s();\n  return useContext(ThemeContext);\n};\n_s(useTheme, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const ThemeContextProvider = ({\n  children\n}) => {\n  _s2();\n  const [mode, setMode] = useState(() => {\n    const savedMode = localStorage.getItem('themeMode');\n    return savedMode || 'light';\n  });\n  useEffect(() => {\n    localStorage.setItem('themeMode', mode);\n  }, [mode]);\n  const toggleTheme = () => {\n    setMode(prevMode => prevMode === 'light' ? 'dark' : 'light');\n  };\n  const theme = createTheme({\n    palette: {\n      mode,\n      primary: {\n        main: mode === 'light' ? '#1976d2' : '#90caf9'\n      },\n      secondary: {\n        main: mode === 'light' ? '#dc004e' : '#f48fb1'\n      },\n      background: {\n        default: mode === 'light' ? '#ffffff' : '#121212',\n        paper: mode === 'light' ? '#f5f5f5' : '#1e1e1e'\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      mode,\n      toggleTheme\n    },\n    children: /*#__PURE__*/_jsxDEV(MUIThemeProvider, {\n      theme: theme,\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s2(ThemeContextProvider, \"HqhDrs4jO4oO/TdrMZa/HXHAlJs=\");\n_c = ThemeContextProvider;\nvar _c;\n$RefreshReg$(_c, \"ThemeContextProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","ThemeProvider","MUIThemeProvider","createTheme","CssBaseline","jsxDEV","_jsxDEV","ThemeContext","mode","toggleTheme","useTheme","_s","ThemeContextProvider","children","_s2","setMode","savedMode","localStorage","getItem","setItem","prevMode","theme","palette","primary","main","secondary","background","default","paper","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/TesCode/aichat/frontend/src/context/ThemeContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { ThemeProvider as MUIThemeProvider, createTheme, CssBaseline } from '@mui/material';\r\n\r\ntype ThemeMode = 'light' | 'dark';\r\n\r\ninterface ThemeContextType {\r\n  mode: ThemeMode;\r\n  toggleTheme: () => void;\r\n}\r\n\r\nconst ThemeContext = createContext<ThemeContextType>({\r\n  mode: 'light',\r\n  toggleTheme: () => {},\r\n});\r\n\r\nexport const useTheme = () => useContext(ThemeContext);\r\n\r\nexport const ThemeContextProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [mode, setMode] = useState<ThemeMode>(() => {\r\n    const savedMode = localStorage.getItem('themeMode');\r\n    return (savedMode as ThemeMode) || 'light';\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('themeMode', mode);\r\n  }, [mode]);\r\n\r\n  const toggleTheme = () => {\r\n    setMode((prevMode) => (prevMode === 'light' ? 'dark' : 'light'));\r\n  };\r\n\r\n  const theme = createTheme({\r\n    palette: {\r\n      mode,\r\n      primary: {\r\n        main: mode === 'light' ? '#1976d2' : '#90caf9',\r\n      },\r\n      secondary: {\r\n        main: mode === 'light' ? '#dc004e' : '#f48fb1',\r\n      },\r\n      background: {\r\n        default: mode === 'light' ? '#ffffff' : '#121212',\r\n        paper: mode === 'light' ? '#f5f5f5' : '#1e1e1e',\r\n      },\r\n    },\r\n  });\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ mode, toggleTheme }}>\r\n      <MUIThemeProvider theme={theme}>\r\n        <CssBaseline />\r\n        {children}\r\n      </MUIThemeProvider>\r\n    </ThemeContext.Provider>\r\n  );\r\n}; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,SAASC,aAAa,IAAIC,gBAAgB,EAAEC,WAAW,EAAEC,WAAW,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAS5F,MAAMC,YAAY,gBAAGV,aAAa,CAAmB;EACnDW,IAAI,EAAE,OAAO;EACbC,WAAW,EAAEA,CAAA,KAAM,CAAC;AACtB,CAAC,CAAC;AAEF,OAAO,MAAMC,QAAQ,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMb,UAAU,CAACS,YAAY,CAAC;AAAA;AAACI,EAAA,CAA1CD,QAAQ;AAErB,OAAO,MAAME,oBAA6D,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC7F,MAAM,CAACN,IAAI,EAAEO,OAAO,CAAC,GAAGhB,QAAQ,CAAY,MAAM;IAChD,MAAMiB,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IACnD,OAAQF,SAAS,IAAkB,OAAO;EAC5C,CAAC,CAAC;EAEFhB,SAAS,CAAC,MAAM;IACdiB,YAAY,CAACE,OAAO,CAAC,WAAW,EAAEX,IAAI,CAAC;EACzC,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EAEV,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxBM,OAAO,CAAEK,QAAQ,IAAMA,QAAQ,KAAK,OAAO,GAAG,MAAM,GAAG,OAAQ,CAAC;EAClE,CAAC;EAED,MAAMC,KAAK,GAAGlB,WAAW,CAAC;IACxBmB,OAAO,EAAE;MACPd,IAAI;MACJe,OAAO,EAAE;QACPC,IAAI,EAAEhB,IAAI,KAAK,OAAO,GAAG,SAAS,GAAG;MACvC,CAAC;MACDiB,SAAS,EAAE;QACTD,IAAI,EAAEhB,IAAI,KAAK,OAAO,GAAG,SAAS,GAAG;MACvC,CAAC;MACDkB,UAAU,EAAE;QACVC,OAAO,EAAEnB,IAAI,KAAK,OAAO,GAAG,SAAS,GAAG,SAAS;QACjDoB,KAAK,EAAEpB,IAAI,KAAK,OAAO,GAAG,SAAS,GAAG;MACxC;IACF;EACF,CAAC,CAAC;EAEF,oBACEF,OAAA,CAACC,YAAY,CAACsB,QAAQ;IAACC,KAAK,EAAE;MAAEtB,IAAI;MAAEC;IAAY,CAAE;IAAAI,QAAA,eAClDP,OAAA,CAACJ,gBAAgB;MAACmB,KAAK,EAAEA,KAAM;MAAAR,QAAA,gBAC7BP,OAAA,CAACF,WAAW;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACdrB,QAAQ;IAAA;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAE5B,CAAC;AAACpB,GAAA,CAtCWF,oBAA6D;AAAAuB,EAAA,GAA7DvB,oBAA6D;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}