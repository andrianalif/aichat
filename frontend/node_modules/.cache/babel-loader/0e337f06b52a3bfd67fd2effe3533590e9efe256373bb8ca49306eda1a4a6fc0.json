{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:8000/api';\nconst getAuthHeader = () => {\n  const token = localStorage.getItem('token');\n  if (!token) {\n    throw new Error('No authentication token found');\n  }\n  return {\n    'Authorization': `Bearer ${token}`,\n    'Content-Type': 'application/json'\n  };\n};\nexport const getChatHistory = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/chat/chats`, {\n      headers: getAuthHeader()\n    });\n    return response.data;\n  } catch (error) {\n    if (axios.isAxiosError(error)) {\n      var _error$response, _error$response2, _error$response2$data;\n      if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n        localStorage.removeItem('token');\n        window.location.href = '/login';\n      }\n      throw new Error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.detail) || 'Failed to fetch chat history');\n    }\n    throw error;\n  }\n};\nexport const sendMessage = async message => {\n  try {\n    const response = await axios.post(`${API_URL}/chat/chat`, {\n      message\n    }, {\n      headers: getAuthHeader()\n    });\n    return response.data;\n  } catch (error) {\n    if (axios.isAxiosError(error)) {\n      var _error$response3, _error$response4, _error$response4$data;\n      if (((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) === 401) {\n        localStorage.removeItem('token');\n        window.location.href = '/login';\n      }\n      throw new Error(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.detail) || 'Failed to send message');\n    }\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_URL","getAuthHeader","token","localStorage","getItem","Error","getChatHistory","response","get","headers","data","error","isAxiosError","_error$response","_error$response2","_error$response2$data","status","removeItem","window","location","href","detail","sendMessage","message","post","_error$response3","_error$response4","_error$response4$data"],"sources":["C:/TesCode/aichat/frontend/src/services/chatService.ts"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:8000/api';\r\n\r\nexport interface ChatMessage {\r\n    message: string;\r\n}\r\n\r\nexport interface ChatResponse {\r\n    id: number;\r\n    message: string;\r\n    response: string;\r\n    created_at: string;\r\n}\r\n\r\nconst getAuthHeader = () => {\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n        throw new Error('No authentication token found');\r\n    }\r\n    return {\r\n        'Authorization': `Bearer ${token}`,\r\n        'Content-Type': 'application/json'\r\n    };\r\n};\r\n\r\nexport const getChatHistory = async (): Promise<ChatResponse[]> => {\r\n    try {\r\n        const response = await axios.get(\r\n            `${API_URL}/chat/chats`,\r\n            {\r\n                headers: getAuthHeader()\r\n            }\r\n        );\r\n        return response.data;\r\n    } catch (error) {\r\n        if (axios.isAxiosError(error)) {\r\n            if (error.response?.status === 401) {\r\n                localStorage.removeItem('token');\r\n                window.location.href = '/login';\r\n            }\r\n            throw new Error(error.response?.data?.detail || 'Failed to fetch chat history');\r\n        }\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const sendMessage = async (message: string): Promise<ChatResponse> => {\r\n    try {\r\n        const response = await axios.post(\r\n            `${API_URL}/chat/chat`,\r\n            { message },\r\n            {\r\n                headers: getAuthHeader()\r\n            }\r\n        );\r\n        return response.data;\r\n    } catch (error) {\r\n        if (axios.isAxiosError(error)) {\r\n            if (error.response?.status === 401) {\r\n                localStorage.removeItem('token');\r\n                window.location.href = '/login';\r\n            }\r\n            throw new Error(error.response?.data?.detail || 'Failed to send message');\r\n        }\r\n        throw error;\r\n    }\r\n}; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,2BAA2B;AAa3C,MAAMC,aAAa,GAAGA,CAAA,KAAM;EACxB,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAI,CAACF,KAAK,EAAE;IACR,MAAM,IAAIG,KAAK,CAAC,+BAA+B,CAAC;EACpD;EACA,OAAO;IACH,eAAe,EAAE,UAAUH,KAAK,EAAE;IAClC,cAAc,EAAE;EACpB,CAAC;AACL,CAAC;AAED,OAAO,MAAMI,cAAc,GAAG,MAAAA,CAAA,KAAqC;EAC/D,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAC5B,GAAGR,OAAO,aAAa,EACvB;MACIS,OAAO,EAAER,aAAa,CAAC;IAC3B,CACJ,CAAC;IACD,OAAOM,QAAQ,CAACG,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,IAAIZ,KAAK,CAACa,YAAY,CAACD,KAAK,CAAC,EAAE;MAAA,IAAAE,eAAA,EAAAC,gBAAA,EAAAC,qBAAA;MAC3B,IAAI,EAAAF,eAAA,GAAAF,KAAK,CAACJ,QAAQ,cAAAM,eAAA,uBAAdA,eAAA,CAAgBG,MAAM,MAAK,GAAG,EAAE;QAChCb,YAAY,CAACc,UAAU,CAAC,OAAO,CAAC;QAChCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;MACnC;MACA,MAAM,IAAIf,KAAK,CAAC,EAAAS,gBAAA,GAAAH,KAAK,CAACJ,QAAQ,cAAAO,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBJ,IAAI,cAAAK,qBAAA,uBAApBA,qBAAA,CAAsBM,MAAM,KAAI,8BAA8B,CAAC;IACnF;IACA,MAAMV,KAAK;EACf;AACJ,CAAC;AAED,OAAO,MAAMW,WAAW,GAAG,MAAOC,OAAe,IAA4B;EACzE,IAAI;IACA,MAAMhB,QAAQ,GAAG,MAAMR,KAAK,CAACyB,IAAI,CAC7B,GAAGxB,OAAO,YAAY,EACtB;MAAEuB;IAAQ,CAAC,EACX;MACId,OAAO,EAAER,aAAa,CAAC;IAC3B,CACJ,CAAC;IACD,OAAOM,QAAQ,CAACG,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,IAAIZ,KAAK,CAACa,YAAY,CAACD,KAAK,CAAC,EAAE;MAAA,IAAAc,gBAAA,EAAAC,gBAAA,EAAAC,qBAAA;MAC3B,IAAI,EAAAF,gBAAA,GAAAd,KAAK,CAACJ,QAAQ,cAAAkB,gBAAA,uBAAdA,gBAAA,CAAgBT,MAAM,MAAK,GAAG,EAAE;QAChCb,YAAY,CAACc,UAAU,CAAC,OAAO,CAAC;QAChCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;MACnC;MACA,MAAM,IAAIf,KAAK,CAAC,EAAAqB,gBAAA,GAAAf,KAAK,CAACJ,QAAQ,cAAAmB,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBhB,IAAI,cAAAiB,qBAAA,uBAApBA,qBAAA,CAAsBN,MAAM,KAAI,wBAAwB,CAAC;IAC7E;IACA,MAAMV,KAAK;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}