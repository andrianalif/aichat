{"ast":null,"code":"var _jsxFileName = \"C:\\\\TesCode\\\\aichat\\\\frontend\\\\src\\\\context\\\\ThemeContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { ThemeProvider as MUIThemeProvider, createTheme, CssBaseline } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext(undefined);\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s();\n  const [mode, setMode] = useState(() => {\n    const savedMode = localStorage.getItem('themeMode');\n    return savedMode || 'light';\n  });\n  useEffect(() => {\n    localStorage.setItem('themeMode', mode);\n  }, [mode]);\n  const toggleTheme = () => {\n    setMode(prevMode => prevMode === 'light' ? 'dark' : 'light');\n  };\n  const theme = createTheme({\n    palette: {\n      mode,\n      primary: {\n        main: mode === 'light' ? '#1976d2' : '#90caf9'\n      },\n      secondary: {\n        main: mode === 'light' ? '#dc004e' : '#f48fb1'\n      },\n      background: {\n        default: mode === 'light' ? '#ffffff' : '#121212',\n        paper: mode === 'light' ? '#f5f5f5' : '#1e1e1e'\n      }\n    },\n    components: {\n      MuiPaper: {\n        styleOverrides: {\n          root: {\n            backgroundImage: 'none'\n          }\n        }\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      mode,\n      toggleTheme\n    },\n    children: /*#__PURE__*/_jsxDEV(MUIThemeProvider, {\n      theme: theme,\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {\n        enableColorScheme: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeProvider, \"HqhDrs4jO4oO/TdrMZa/HXHAlJs=\");\n_c = ThemeProvider;\nexport const useTheme = () => {\n  _s2();\n  const context = useContext(ThemeContext);\n  if (context === undefined) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n_s2(useTheme, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","ThemeProvider","MUIThemeProvider","createTheme","CssBaseline","jsxDEV","_jsxDEV","ThemeContext","undefined","children","_s","mode","setMode","savedMode","localStorage","getItem","setItem","toggleTheme","prevMode","theme","palette","primary","main","secondary","background","default","paper","components","MuiPaper","styleOverrides","root","backgroundImage","Provider","value","enableColorScheme","fileName","_jsxFileName","lineNumber","columnNumber","_c","useTheme","_s2","context","Error","$RefreshReg$"],"sources":["C:/TesCode/aichat/frontend/src/context/ThemeContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\nimport { ThemeProvider as MUIThemeProvider, createTheme, CssBaseline } from '@mui/material';\r\n\r\ntype ThemeMode = 'light' | 'dark';\r\n\r\ninterface ThemeContextType {\r\n  mode: ThemeMode;\r\n  toggleTheme: () => void;\r\n}\r\n\r\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\r\n\r\ninterface ThemeProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const ThemeProvider: React.FC<ThemeProviderProps> = ({ children }) => {\r\n  const [mode, setMode] = useState<ThemeMode>(() => {\r\n    const savedMode = localStorage.getItem('themeMode');\r\n    return (savedMode as ThemeMode) || 'light';\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('themeMode', mode);\r\n  }, [mode]);\r\n\r\n  const toggleTheme = () => {\r\n    setMode((prevMode) => (prevMode === 'light' ? 'dark' : 'light'));\r\n  };\r\n\r\n  const theme = createTheme({\r\n    palette: {\r\n      mode,\r\n      primary: {\r\n        main: mode === 'light' ? '#1976d2' : '#90caf9',\r\n      },\r\n      secondary: {\r\n        main: mode === 'light' ? '#dc004e' : '#f48fb1',\r\n      },\r\n      background: {\r\n        default: mode === 'light' ? '#ffffff' : '#121212',\r\n        paper: mode === 'light' ? '#f5f5f5' : '#1e1e1e',\r\n      },\r\n    },\r\n    components: {\r\n      MuiPaper: {\r\n        styleOverrides: {\r\n          root: {\r\n            backgroundImage: 'none',\r\n          },\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ mode, toggleTheme }}>\r\n      <MUIThemeProvider theme={theme}>\r\n        <CssBaseline enableColorScheme />\r\n        {children}\r\n      </MUIThemeProvider>\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useTheme = (): ThemeContextType => {\r\n  const context = useContext(ThemeContext);\r\n  if (context === undefined) {\r\n    throw new Error('useTheme must be used within a ThemeProvider');\r\n  }\r\n  return context;\r\n}; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAmB,OAAO;AACxF,SAASC,aAAa,IAAIC,gBAAgB,EAAEC,WAAW,EAAEC,WAAW,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAS5F,MAAMC,YAAY,gBAAGV,aAAa,CAA+BW,SAAS,CAAC;AAM3E,OAAO,MAAMP,aAA2C,GAAGA,CAAC;EAAEQ;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC3E,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAY,MAAM;IAChD,MAAMc,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IACnD,OAAQF,SAAS,IAAkB,OAAO;EAC5C,CAAC,CAAC;EAEFb,SAAS,CAAC,MAAM;IACdc,YAAY,CAACE,OAAO,CAAC,WAAW,EAAEL,IAAI,CAAC;EACzC,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EAEV,MAAMM,WAAW,GAAGA,CAAA,KAAM;IACxBL,OAAO,CAAEM,QAAQ,IAAMA,QAAQ,KAAK,OAAO,GAAG,MAAM,GAAG,OAAQ,CAAC;EAClE,CAAC;EAED,MAAMC,KAAK,GAAGhB,WAAW,CAAC;IACxBiB,OAAO,EAAE;MACPT,IAAI;MACJU,OAAO,EAAE;QACPC,IAAI,EAAEX,IAAI,KAAK,OAAO,GAAG,SAAS,GAAG;MACvC,CAAC;MACDY,SAAS,EAAE;QACTD,IAAI,EAAEX,IAAI,KAAK,OAAO,GAAG,SAAS,GAAG;MACvC,CAAC;MACDa,UAAU,EAAE;QACVC,OAAO,EAAEd,IAAI,KAAK,OAAO,GAAG,SAAS,GAAG,SAAS;QACjDe,KAAK,EAAEf,IAAI,KAAK,OAAO,GAAG,SAAS,GAAG;MACxC;IACF,CAAC;IACDgB,UAAU,EAAE;MACVC,QAAQ,EAAE;QACRC,cAAc,EAAE;UACdC,IAAI,EAAE;YACJC,eAAe,EAAE;UACnB;QACF;MACF;IACF;EACF,CAAC,CAAC;EAEF,oBACEzB,OAAA,CAACC,YAAY,CAACyB,QAAQ;IAACC,KAAK,EAAE;MAAEtB,IAAI;MAAEM;IAAY,CAAE;IAAAR,QAAA,eAClDH,OAAA,CAACJ,gBAAgB;MAACiB,KAAK,EAAEA,KAAM;MAAAV,QAAA,gBAC7BH,OAAA,CAACF,WAAW;QAAC8B,iBAAiB;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAChC7B,QAAQ;IAAA;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAE5B,CAAC;AAAC5B,EAAA,CA/CWT,aAA2C;AAAAsC,EAAA,GAA3CtC,aAA2C;AAiDxD,OAAO,MAAMuC,QAAQ,GAAGA,CAAA,KAAwB;EAAAC,GAAA;EAC9C,MAAMC,OAAO,GAAG5C,UAAU,CAACS,YAAY,CAAC;EACxC,IAAImC,OAAO,KAAKlC,SAAS,EAAE;IACzB,MAAM,IAAImC,KAAK,CAAC,8CAA8C,CAAC;EACjE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,QAAQ;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}