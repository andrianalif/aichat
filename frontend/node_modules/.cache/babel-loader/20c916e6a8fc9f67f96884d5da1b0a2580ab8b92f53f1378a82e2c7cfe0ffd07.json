{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:8000/api';\nexport const sendMessage = async message => {\n  try {\n    const token = localStorage.getItem('token');\n    const response = await axios.post(`${API_URL}/chat`, {\n      message\n    }, {\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Chat error:', error);\n    throw error;\n  }\n};\nexport const getChatHistory = async () => {\n  try {\n    const token = localStorage.getItem('token');\n    const response = await axios.get(`${API_URL}/chats`, {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Get chat history error:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_URL","sendMessage","message","token","localStorage","getItem","response","post","headers","data","error","console","getChatHistory","get"],"sources":["C:/TesCode/aichat/frontend/src/services/chatService.ts"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:8000/api';\r\n\r\nexport interface ChatMessage {\r\n    message: string;\r\n}\r\n\r\nexport interface ChatResponse {\r\n    chat_id: number;\r\n    message: string;\r\n    response: string;\r\n    created_at: string;\r\n}\r\n\r\nexport const sendMessage = async (message: string): Promise<ChatResponse> => {\r\n    try {\r\n        const token = localStorage.getItem('token');\r\n        const response = await axios.post(\r\n            `${API_URL}/chat`,\r\n            { message },\r\n            {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`,\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        );\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Chat error:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const getChatHistory = async (): Promise<ChatResponse[]> => {\r\n    try {\r\n        const token = localStorage.getItem('token');\r\n        const response = await axios.get(\r\n            `${API_URL}/chats`,\r\n            {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`\r\n                }\r\n            }\r\n        );\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Get chat history error:', error);\r\n        throw error;\r\n    }\r\n}; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,2BAA2B;AAa3C,OAAO,MAAMC,WAAW,GAAG,MAAOC,OAAe,IAA4B;EACzE,IAAI;IACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,IAAI,CAC7B,GAAGP,OAAO,OAAO,EACjB;MAAEE;IAAQ,CAAC,EACX;MACIM,OAAO,EAAE;QACL,eAAe,EAAE,UAAUL,KAAK,EAAE;QAClC,cAAc,EAAE;MACpB;IACJ,CACJ,CAAC;IACD,OAAOG,QAAQ,CAACG,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,aAAa,EAAEA,KAAK,CAAC;IACnC,MAAMA,KAAK;EACf;AACJ,CAAC;AAED,OAAO,MAAME,cAAc,GAAG,MAAAA,CAAA,KAAqC;EAC/D,IAAI;IACA,MAAMT,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACc,GAAG,CAC5B,GAAGb,OAAO,QAAQ,EAClB;MACIQ,OAAO,EAAE;QACL,eAAe,EAAE,UAAUL,KAAK;MACpC;IACJ,CACJ,CAAC;IACD,OAAOG,QAAQ,CAACG,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,MAAMA,KAAK;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}